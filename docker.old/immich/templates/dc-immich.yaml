networks:
  net:  
    ipam:
      config:
        - subnet: 198.19.14.0/24
          gateway: 198.19.14.1

volumes:
  upload:
  ml_cache:
  redis_data:
  postgredb_data:

services:
  immich:
    container_name: immich
    hostname: immich
    image: ghcr.io/immich-app/immich-server:release
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      - upload:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
      - /mnt/local-load/Junk/tmp-foto:/tmpfoto:ro
    env_file:
      - /srv/docker/enviroments/immich.env
    ports:
      - 31420:2283
    networks:
      net:
        ipv4_address: 198.19.14.2
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    restart: unless-stopped
    healthcheck:
      disable: false
    depends_on:
      - ml
      - redis
      - postgresdb

  ml:
    container_name: immich-ml
    hostname: immich-machine-learning
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:release
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - ml_cache:/cache
    env_file:
      - /srv/docker/enviroments/immich.env  
    networks:
      net:
        ipv4_address: 198.19.14.3
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    restart: unless-stopped
    healthcheck:
      disable: false

  redis:
    container_name: immich-redis
    hostname: redis
    image: docker.io/redis:6.2-alpine
    volumes:
      - redis_data:/data
    networks:
      net:
        ipv4_address: 198.19.14.4
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    restart: unless-stopped
    healthcheck:
      test: redis-cli ping || exit 1

  postgresdb:
    container_name: immich-postgresdb
    hostname: database
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0
    env_file:
      - /srv/docker/enviroments/immich.env
    environment:
      #POSTGRES_PASSWORD: ${DB_PASSWORD}
      #POSTGRES_USER: ${DB_USERNAME}
      #POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - postgredb_data:/var/lib/postgresql/data
    networks:
      net:
        ipv4_address: 198.19.14.5
    command: >-
      postgres
      -c shared_preload_libraries=vectors.so
      -c 'search_path="$$user", public, vectors'
      -c logging_collector=on
      -c max_wal_size=2GB
      -c shared_buffers=512MB
      -c wal_compression=on
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    restart: unless-stopped
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1;
        Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align
        --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
        echo "checksum failure count is $$Chksum";
        [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m


